//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

namespace NSTest;

function add2(x: Int, y: Int): Int {
    return x + y;
}

entrypoint function add2C(): Int {
    return add2(2, 3);
}

entrypoint function add2Check(x: Int): Int {
    return add2(2, x);
}

function allPositive(...args: List<Int>): Bool {
    return args->allof(fn(x) => x >= 0);
}

entrypoint function allPositiveC(): Bool {
    return allPositive(1, 3, 4);
}

entrypoint function allPositiveCheck(x: Int): Bool {
    let b = allPositive(1, 3, x, 4);
    check b;

    return b; 
}

entrypoint function allPositiveCapture(): Bool {
    let zero = 0;
    return List<Int>@{1, 2}->allof(fn(x) => x >= zero);
}

function sign(x?: Int): Int {
    var y: Int;

    if(x == none || x == 0) {
        y = 0;
    }
    else {
        y = (x > 0) ? 1 : -1;
    }

    return y;
}

entrypoint function signC5(): Int {
    return sign(5);
}

entrypoint function signCm5(): Int {
    return sign(-5);
}

entrypoint function signCnone(): Int {
    return sign();
}

entrypoint function signCheck(x: Int): Int {
    let v = sign(x);
    check x != 1;

    return x;
}

