{
    "suite": "readme",
    "tests": [
        {
            "test": "add",
            "src": null,
            "sig": "function main(x: Nat, y: Nat): Bool",
            "code": "function add2(x: Nat, y: Nat): Nat { return x + y; }",
            "refutes": [
                "add2(x, y) >= 0n",
                "add2(x, 0) == x",
                "add2(0, y) == y"
            ],
            "reachables": [
                "add2(1, 2) == 3n",
                "add2(x, y) == 3n"
            ]
        },
        {
            "test": "allPositive",
            "src": null,
            "sig": "function main(x: Int): Bool",
            "code": "function allPositive(...args: List<Int>): Bool { return args.allOf(fn(x) => x >= 0i); }",
            "refutes": [
                "allPositive()",
                "allPositive(1, 4, 3)",
                "!allPositive(0, -3)",
                "x >= 0i && allPositive(0, x)"
            ],
            "reachables": [
                "allPositive(0, x)",
                "!allPositive(0, x)"
            ]
        }
    ]
}